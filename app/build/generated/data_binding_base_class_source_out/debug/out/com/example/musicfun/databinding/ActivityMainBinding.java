// Generated by view binder compiler. Do not edit!
package com.example.musicfun.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.musicfun.R;
import com.google.android.exoplayer2.ui.PlayerControlView;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final SearchView actionSearch;

  @NonNull
  public final TextView cancel;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final PlayerControlView controls;

  @NonNull
  public final FrameLayout flSearchResult;

  @NonNull
  public final BottomNavigationView navView;

  @NonNull
  public final ListView searchList;

  @NonNull
  public final ImageView setting;

  @NonNull
  public final Toolbar toolbar;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull SearchView actionSearch,
      @NonNull TextView cancel, @NonNull ConstraintLayout container,
      @NonNull PlayerControlView controls, @NonNull FrameLayout flSearchResult,
      @NonNull BottomNavigationView navView, @NonNull ListView searchList,
      @NonNull ImageView setting, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.actionSearch = actionSearch;
    this.cancel = cancel;
    this.container = container;
    this.controls = controls;
    this.flSearchResult = flSearchResult;
    this.navView = navView;
    this.searchList = searchList;
    this.setting = setting;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.action_search;
      SearchView actionSearch = ViewBindings.findChildViewById(rootView, id);
      if (actionSearch == null) {
        break missingId;
      }

      id = R.id.cancel;
      TextView cancel = ViewBindings.findChildViewById(rootView, id);
      if (cancel == null) {
        break missingId;
      }

      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.controls;
      PlayerControlView controls = ViewBindings.findChildViewById(rootView, id);
      if (controls == null) {
        break missingId;
      }

      id = R.id.fl_search_result;
      FrameLayout flSearchResult = ViewBindings.findChildViewById(rootView, id);
      if (flSearchResult == null) {
        break missingId;
      }

      id = R.id.nav_view;
      BottomNavigationView navView = ViewBindings.findChildViewById(rootView, id);
      if (navView == null) {
        break missingId;
      }

      id = R.id.search_list;
      ListView searchList = ViewBindings.findChildViewById(rootView, id);
      if (searchList == null) {
        break missingId;
      }

      id = R.id.setting;
      ImageView setting = ViewBindings.findChildViewById(rootView, id);
      if (setting == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, actionSearch, cancel, container,
          controls, flSearchResult, navView, searchList, setting, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
