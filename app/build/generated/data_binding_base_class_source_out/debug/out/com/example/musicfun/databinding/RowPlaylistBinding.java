// Generated by view binder compiler. Do not edit!
package com.example.musicfun.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.musicfun.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowPlaylistBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView defaultIcon;

  @NonNull
  public final LinearLayout llPlaylistName;

  @NonNull
  public final ImageView playlistMenu;

  @NonNull
  public final TextView playlistName;

  private RowPlaylistBinding(@NonNull RelativeLayout rootView, @NonNull ImageView defaultIcon,
      @NonNull LinearLayout llPlaylistName, @NonNull ImageView playlistMenu,
      @NonNull TextView playlistName) {
    this.rootView = rootView;
    this.defaultIcon = defaultIcon;
    this.llPlaylistName = llPlaylistName;
    this.playlistMenu = playlistMenu;
    this.playlistName = playlistName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowPlaylistBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowPlaylistBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_playlist, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowPlaylistBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.default_icon;
      ImageView defaultIcon = ViewBindings.findChildViewById(rootView, id);
      if (defaultIcon == null) {
        break missingId;
      }

      id = R.id.ll_playlist_name;
      LinearLayout llPlaylistName = ViewBindings.findChildViewById(rootView, id);
      if (llPlaylistName == null) {
        break missingId;
      }

      id = R.id.playlist_menu;
      ImageView playlistMenu = ViewBindings.findChildViewById(rootView, id);
      if (playlistMenu == null) {
        break missingId;
      }

      id = R.id.playlist_name;
      TextView playlistName = ViewBindings.findChildViewById(rootView, id);
      if (playlistName == null) {
        break missingId;
      }

      return new RowPlaylistBinding((RelativeLayout) rootView, defaultIcon, llPlaylistName,
          playlistMenu, playlistName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
