// Generated by view binder compiler. Do not edit!
package com.example.musicfun.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.musicfun.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChoosePlaylistBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton addPlaylist;

  @NonNull
  public final Button cancelSelection;

  @NonNull
  public final ListView chooseOnePlaylist;

  @NonNull
  public final RelativeLayout choosePlaylist;

  @NonNull
  public final LinearLayout createNewPlaylist;

  @NonNull
  public final LinearLayout llTwoBtn;

  @NonNull
  public final Button savePlaylist;

  private FragmentChoosePlaylistBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageButton addPlaylist, @NonNull Button cancelSelection,
      @NonNull ListView chooseOnePlaylist, @NonNull RelativeLayout choosePlaylist,
      @NonNull LinearLayout createNewPlaylist, @NonNull LinearLayout llTwoBtn,
      @NonNull Button savePlaylist) {
    this.rootView = rootView;
    this.addPlaylist = addPlaylist;
    this.cancelSelection = cancelSelection;
    this.chooseOnePlaylist = chooseOnePlaylist;
    this.choosePlaylist = choosePlaylist;
    this.createNewPlaylist = createNewPlaylist;
    this.llTwoBtn = llTwoBtn;
    this.savePlaylist = savePlaylist;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChoosePlaylistBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChoosePlaylistBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_choose_playlist, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChoosePlaylistBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_playlist;
      ImageButton addPlaylist = ViewBindings.findChildViewById(rootView, id);
      if (addPlaylist == null) {
        break missingId;
      }

      id = R.id.cancel_selection;
      Button cancelSelection = ViewBindings.findChildViewById(rootView, id);
      if (cancelSelection == null) {
        break missingId;
      }

      id = R.id.choose_one_playlist;
      ListView chooseOnePlaylist = ViewBindings.findChildViewById(rootView, id);
      if (chooseOnePlaylist == null) {
        break missingId;
      }

      RelativeLayout choosePlaylist = (RelativeLayout) rootView;

      id = R.id.create_new_playlist;
      LinearLayout createNewPlaylist = ViewBindings.findChildViewById(rootView, id);
      if (createNewPlaylist == null) {
        break missingId;
      }

      id = R.id.ll_two_btn;
      LinearLayout llTwoBtn = ViewBindings.findChildViewById(rootView, id);
      if (llTwoBtn == null) {
        break missingId;
      }

      id = R.id.save_playlist;
      Button savePlaylist = ViewBindings.findChildViewById(rootView, id);
      if (savePlaylist == null) {
        break missingId;
      }

      return new FragmentChoosePlaylistBinding((RelativeLayout) rootView, addPlaylist,
          cancelSelection, chooseOnePlaylist, choosePlaylist, createNewPlaylist, llTwoBtn,
          savePlaylist);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
