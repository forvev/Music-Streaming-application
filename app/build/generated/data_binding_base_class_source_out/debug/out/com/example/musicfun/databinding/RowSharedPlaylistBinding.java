// Generated by view binder compiler. Do not edit!
package com.example.musicfun.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.musicfun.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowSharedPlaylistBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RadioButton btnSelect;

  @NonNull
  public final ImageView defaultIcon;

  @NonNull
  public final LinearLayout llSharedPlaylistName;

  @NonNull
  public final ImageView playlistOwnerIcon;

  @NonNull
  public final ImageView sharedPlaylistMenu;

  @NonNull
  public final TextView sharedPlaylistName;

  @NonNull
  public final TextView sharedPlaylistOwner;

  private RowSharedPlaylistBinding(@NonNull LinearLayout rootView, @NonNull RadioButton btnSelect,
      @NonNull ImageView defaultIcon, @NonNull LinearLayout llSharedPlaylistName,
      @NonNull ImageView playlistOwnerIcon, @NonNull ImageView sharedPlaylistMenu,
      @NonNull TextView sharedPlaylistName, @NonNull TextView sharedPlaylistOwner) {
    this.rootView = rootView;
    this.btnSelect = btnSelect;
    this.defaultIcon = defaultIcon;
    this.llSharedPlaylistName = llSharedPlaylistName;
    this.playlistOwnerIcon = playlistOwnerIcon;
    this.sharedPlaylistMenu = sharedPlaylistMenu;
    this.sharedPlaylistName = sharedPlaylistName;
    this.sharedPlaylistOwner = sharedPlaylistOwner;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowSharedPlaylistBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowSharedPlaylistBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_shared_playlist, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowSharedPlaylistBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_select;
      RadioButton btnSelect = ViewBindings.findChildViewById(rootView, id);
      if (btnSelect == null) {
        break missingId;
      }

      id = R.id.default_icon;
      ImageView defaultIcon = ViewBindings.findChildViewById(rootView, id);
      if (defaultIcon == null) {
        break missingId;
      }

      id = R.id.ll_shared_playlist_name;
      LinearLayout llSharedPlaylistName = ViewBindings.findChildViewById(rootView, id);
      if (llSharedPlaylistName == null) {
        break missingId;
      }

      id = R.id.playlist_owner_icon;
      ImageView playlistOwnerIcon = ViewBindings.findChildViewById(rootView, id);
      if (playlistOwnerIcon == null) {
        break missingId;
      }

      id = R.id.shared_playlist_menu;
      ImageView sharedPlaylistMenu = ViewBindings.findChildViewById(rootView, id);
      if (sharedPlaylistMenu == null) {
        break missingId;
      }

      id = R.id.shared_playlist_name;
      TextView sharedPlaylistName = ViewBindings.findChildViewById(rootView, id);
      if (sharedPlaylistName == null) {
        break missingId;
      }

      id = R.id.shared_playlist_owner;
      TextView sharedPlaylistOwner = ViewBindings.findChildViewById(rootView, id);
      if (sharedPlaylistOwner == null) {
        break missingId;
      }

      return new RowSharedPlaylistBinding((LinearLayout) rootView, btnSelect, defaultIcon,
          llSharedPlaylistName, playlistOwnerIcon, sharedPlaylistMenu, sharedPlaylistName,
          sharedPlaylistOwner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
