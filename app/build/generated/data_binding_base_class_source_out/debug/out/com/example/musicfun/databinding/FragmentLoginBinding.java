// Generated by view binder compiler. Do not edit!
package com.example.musicfun.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.musicfun.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final ProgressBar loading;

  @NonNull
  public final Button login;

  @NonNull
  public final TextInputEditText loginPassword;

  @NonNull
  public final TextInputEditText loginUsername;

  @NonNull
  public final TextView noAccount;

  @NonNull
  public final TextInputLayout resetCurrent;

  @NonNull
  public final TextInputLayout resetNew;

  private FragmentLoginBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout container, @NonNull ProgressBar loading, @NonNull Button login,
      @NonNull TextInputEditText loginPassword, @NonNull TextInputEditText loginUsername,
      @NonNull TextView noAccount, @NonNull TextInputLayout resetCurrent,
      @NonNull TextInputLayout resetNew) {
    this.rootView = rootView;
    this.container = container;
    this.loading = loading;
    this.login = login;
    this.loginPassword = loginPassword;
    this.loginUsername = loginUsername;
    this.noAccount = noAccount;
    this.resetCurrent = resetCurrent;
    this.resetNew = resetNew;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.loading;
      ProgressBar loading = ViewBindings.findChildViewById(rootView, id);
      if (loading == null) {
        break missingId;
      }

      id = R.id.login;
      Button login = ViewBindings.findChildViewById(rootView, id);
      if (login == null) {
        break missingId;
      }

      id = R.id.login_password;
      TextInputEditText loginPassword = ViewBindings.findChildViewById(rootView, id);
      if (loginPassword == null) {
        break missingId;
      }

      id = R.id.login_username;
      TextInputEditText loginUsername = ViewBindings.findChildViewById(rootView, id);
      if (loginUsername == null) {
        break missingId;
      }

      id = R.id.no_account;
      TextView noAccount = ViewBindings.findChildViewById(rootView, id);
      if (noAccount == null) {
        break missingId;
      }

      id = R.id.reset_current;
      TextInputLayout resetCurrent = ViewBindings.findChildViewById(rootView, id);
      if (resetCurrent == null) {
        break missingId;
      }

      id = R.id.reset_new;
      TextInputLayout resetNew = ViewBindings.findChildViewById(rootView, id);
      if (resetNew == null) {
        break missingId;
      }

      return new FragmentLoginBinding((ConstraintLayout) rootView, container, loading, login,
          loginPassword, loginUsername, noAccount, resetCurrent, resetNew);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
