// Generated by view binder compiler. Do not edit!
package com.example.musicfun.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.musicfun.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ExoStyledPlayerControlViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView addToDefault;

  @NonNull
  public final ImageView currentPlaylist;

  @NonNull
  public final LinearLayout exoCenterControls;

  @NonNull
  public final TextView exoDuration;

  @NonNull
  public final ImageButton exoNext;

  @NonNull
  public final ImageButton exoPlayPause;

  @NonNull
  public final TextView exoPosition;

  @NonNull
  public final ImageButton exoPrev;

  @NonNull
  public final View exoProgressPlaceholder;

  @NonNull
  public final ImageButton exoRepeatToggle;

  @NonNull
  public final ImageButton exoShuffle;

  @NonNull
  public final LinearLayout exoTime;

  @NonNull
  public final RelativeLayout llSongInfo;

  @NonNull
  public final TextView styledPlayerArtist;

  @NonNull
  public final TextView styledPlayerSongName;

  private ExoStyledPlayerControlViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView addToDefault, @NonNull ImageView currentPlaylist,
      @NonNull LinearLayout exoCenterControls, @NonNull TextView exoDuration,
      @NonNull ImageButton exoNext, @NonNull ImageButton exoPlayPause,
      @NonNull TextView exoPosition, @NonNull ImageButton exoPrev,
      @NonNull View exoProgressPlaceholder, @NonNull ImageButton exoRepeatToggle,
      @NonNull ImageButton exoShuffle, @NonNull LinearLayout exoTime,
      @NonNull RelativeLayout llSongInfo, @NonNull TextView styledPlayerArtist,
      @NonNull TextView styledPlayerSongName) {
    this.rootView = rootView;
    this.addToDefault = addToDefault;
    this.currentPlaylist = currentPlaylist;
    this.exoCenterControls = exoCenterControls;
    this.exoDuration = exoDuration;
    this.exoNext = exoNext;
    this.exoPlayPause = exoPlayPause;
    this.exoPosition = exoPosition;
    this.exoPrev = exoPrev;
    this.exoProgressPlaceholder = exoProgressPlaceholder;
    this.exoRepeatToggle = exoRepeatToggle;
    this.exoShuffle = exoShuffle;
    this.exoTime = exoTime;
    this.llSongInfo = llSongInfo;
    this.styledPlayerArtist = styledPlayerArtist;
    this.styledPlayerSongName = styledPlayerSongName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ExoStyledPlayerControlViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ExoStyledPlayerControlViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.exo_styled_player_control_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ExoStyledPlayerControlViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_to_default;
      ImageView addToDefault = ViewBindings.findChildViewById(rootView, id);
      if (addToDefault == null) {
        break missingId;
      }

      id = R.id.current_playlist;
      ImageView currentPlaylist = ViewBindings.findChildViewById(rootView, id);
      if (currentPlaylist == null) {
        break missingId;
      }

      id = R.id.exo_center_controls;
      LinearLayout exoCenterControls = ViewBindings.findChildViewById(rootView, id);
      if (exoCenterControls == null) {
        break missingId;
      }

      id = com.google.android.exoplayer2.R.id.exo_duration;
      TextView exoDuration = ViewBindings.findChildViewById(rootView, id);
      if (exoDuration == null) {
        break missingId;
      }

      id = com.google.android.exoplayer2.R.id.exo_next;
      ImageButton exoNext = ViewBindings.findChildViewById(rootView, id);
      if (exoNext == null) {
        break missingId;
      }

      id = com.google.android.exoplayer2.R.id.exo_play_pause;
      ImageButton exoPlayPause = ViewBindings.findChildViewById(rootView, id);
      if (exoPlayPause == null) {
        break missingId;
      }

      id = com.google.android.exoplayer2.R.id.exo_position;
      TextView exoPosition = ViewBindings.findChildViewById(rootView, id);
      if (exoPosition == null) {
        break missingId;
      }

      id = com.google.android.exoplayer2.R.id.exo_prev;
      ImageButton exoPrev = ViewBindings.findChildViewById(rootView, id);
      if (exoPrev == null) {
        break missingId;
      }

      id = com.google.android.exoplayer2.R.id.exo_progress_placeholder;
      View exoProgressPlaceholder = ViewBindings.findChildViewById(rootView, id);
      if (exoProgressPlaceholder == null) {
        break missingId;
      }

      id = com.google.android.exoplayer2.R.id.exo_repeat_toggle;
      ImageButton exoRepeatToggle = ViewBindings.findChildViewById(rootView, id);
      if (exoRepeatToggle == null) {
        break missingId;
      }

      id = com.google.android.exoplayer2.R.id.exo_shuffle;
      ImageButton exoShuffle = ViewBindings.findChildViewById(rootView, id);
      if (exoShuffle == null) {
        break missingId;
      }

      id = R.id.exo_time;
      LinearLayout exoTime = ViewBindings.findChildViewById(rootView, id);
      if (exoTime == null) {
        break missingId;
      }

      id = R.id.ll_song_info;
      RelativeLayout llSongInfo = ViewBindings.findChildViewById(rootView, id);
      if (llSongInfo == null) {
        break missingId;
      }

      id = R.id.styled_player_artist;
      TextView styledPlayerArtist = ViewBindings.findChildViewById(rootView, id);
      if (styledPlayerArtist == null) {
        break missingId;
      }

      id = R.id.styled_player_song_name;
      TextView styledPlayerSongName = ViewBindings.findChildViewById(rootView, id);
      if (styledPlayerSongName == null) {
        break missingId;
      }

      return new ExoStyledPlayerControlViewBinding((ConstraintLayout) rootView, addToDefault,
          currentPlaylist, exoCenterControls, exoDuration, exoNext, exoPlayPause, exoPosition,
          exoPrev, exoProgressPlaceholder, exoRepeatToggle, exoShuffle, exoTime, llSongInfo,
          styledPlayerArtist, styledPlayerSongName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
